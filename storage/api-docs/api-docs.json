{
    "openapi": "3.0.0",
    "info": {
        "title": "Book Library API",
        "description": "API documentation for the Book Library",
        "contact": {
            "email": "malinjr07@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books",
                "operationId": "f465243d8f27db2558997076a39712cd",
                "responses": {
                    "200": {
                        "description": "Successful"
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "operationId": "a97a8ca8bd2b58e91d3ab66b20548a7f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "author",
                                    "publication_year"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "My Book"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "publication_year": {
                                        "type": "integer",
                                        "example": 2020
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a single book by ID",
                "operationId": "8ad49dadc452ad67a975b42b9ea7f293",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book found"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "operationId": "e6ca5b783ea058eed9c2d53d070975f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "Updated Author"
                                    },
                                    "publication_year": {
                                        "type": "integer",
                                        "example": 2023
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book by ID",
                "operationId": "baa9e8f3e013efb89e23ffe3068dfcac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Book deleted"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            }
        },
        "/api/upload": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload an image file",
                "description": "Upload and store an image file",
                "operationId": "uploadImage",
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/storage/uploads/images/abcdefg.jpg"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "uploads/images/abcdefg.jpg"
                                                },
                                                "mime_type": {
                                                    "type": "string",
                                                    "example": "image/jpeg"
                                                },
                                                "extension": {
                                                    "type": "string",
                                                    "example": "jpg"
                                                },
                                                "disk": {
                                                    "type": "string",
                                                    "example": "local"
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "example": 12345
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "profile.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No file was uploaded."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload-video": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload a video file",
                "description": "Upload and store a video file",
                "operationId": "uploadVideo",
                "requestBody": {
                    "description": "Video file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "http://localhost:8000/storage/uploads/videos/abcdefg.mp4"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "uploads/videos/abcdefg.mp4"
                                                },
                                                "mime_type": {
                                                    "type": "string",
                                                    "example": "video/mp4"
                                                },
                                                "extension": {
                                                    "type": "string",
                                                    "example": "mp4"
                                                },
                                                "disk": {
                                                    "type": "string",
                                                    "example": "local"
                                                },
                                                "size": {
                                                    "type": "integer",
                                                    "example": 5000000
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "tutorial.mp4"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Only video files are allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sign-in": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in a user",
                "description": "Authenticates a user and returns an access token",
                "operationId": "signIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "emailAddress",
                                    "password"
                                ],
                                "properties": {
                                    "emailAddress": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdefghijklmnopqrstuvwxyz123456789"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid credentials."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sign-up": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account and returns an access token",
                "operationId": "signUp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "emailAddress",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "emailAddress": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User signed up successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdefghijklmnopqrstuvwxyz123456789"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "emailAddress": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email address has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign out the authenticated user",
                "description": "Revokes all access tokens for the authenticated user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Returns a list of all users",
                "operationId": "8a14ed69fb5e1f73f4bd54e7bddd5197",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john@example.com"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid authentication token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Returns a specific user by ID",
                "operationId": "4e265bb2b916299d36cd3268d3e24885",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user by ID",
                "operationId": "79dba56c87f4205ad32dc0e5ccec48e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreBookRequest": {
                "required": [
                    "title",
                    "author",
                    "publication_year"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "100M Leads"
                    },
                    "author": {
                        "type": "string",
                        "example": "Alex Hormozi"
                    },
                    "publication_year": {
                        "type": "integer",
                        "example": 2005
                    }
                },
                "type": "object"
            },
            "UpdateBookRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "New Book"
                    },
                    "author": {
                        "type": "string",
                        "example": "Jordan Belfort"
                    },
                    "publication_year": {
                        "type": "integer",
                        "example": 2021
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Login with email and password via /api/sign-in to get the authentication token. Then enter 'Bearer {token}' below.",
                "name": "Bearer Token",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Media",
            "description": "API Endpoints for media file uploads"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Users",
            "description": "API Endpoints for managing users"
        },
        {
            "name": "Books",
            "description": "Books"
        }
    ]
}